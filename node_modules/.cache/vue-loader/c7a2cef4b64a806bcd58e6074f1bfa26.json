{"remainingRequest":"C:\\Users\\HP\\OneDrive\\Desktop\\wsss\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\HP\\OneDrive\\Desktop\\wsss\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\HP\\OneDrive\\Desktop\\wsss\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\OneDrive\\Desktop\\wsss\\src\\views\\app\\pages\\awards.vue?vue&type=template&id=0b557029&","dependencies":[{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\wsss\\src\\views\\app\\pages\\awards.vue","mtime":1700739766246},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\wsss\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1691816385086},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\wsss\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1691816392152},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\wsss\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1691816385086},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\wsss\\node_modules\\vue-loader\\lib\\index.js","mtime":1691816392152}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}