{"remainingRequest":"C:\\Users\\HP\\OneDrive\\Desktop\\wsss\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\HP\\OneDrive\\Desktop\\wsss\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\HP\\OneDrive\\Desktop\\wsss\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\OneDrive\\Desktop\\wsss\\src\\views\\app\\pages\\home.vue?vue&type=template&id=53e3d192&","dependencies":[{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\wsss\\src\\views\\app\\pages\\home.vue","mtime":1700033710097},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\wsss\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1691816385086},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\wsss\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1691816392152},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\wsss\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1691816385086},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\wsss\\node_modules\\vue-loader\\lib\\index.js","mtime":1691816392152}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}