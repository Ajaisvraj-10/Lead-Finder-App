{"remainingRequest":"C:\\Users\\HP\\Downloads\\Archive (3)\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\HP\\Downloads\\Archive (3)\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\HP\\Downloads\\Archive (3)\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\Downloads\\Archive (3)\\src\\views\\app\\pages\\home.vue?vue&type=template&id=53e3d192&","dependencies":[{"path":"C:\\Users\\HP\\Downloads\\Archive (3)\\src\\views\\app\\pages\\home.vue","mtime":1696566125012},{"path":"C:\\Users\\HP\\Downloads\\Archive (3)\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1691816385086},{"path":"C:\\Users\\HP\\Downloads\\Archive (3)\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1691816392152},{"path":"C:\\Users\\HP\\Downloads\\Archive (3)\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1691816385086},{"path":"C:\\Users\\HP\\Downloads\\Archive (3)\\node_modules\\vue-loader\\lib\\index.js","mtime":1691816392152}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "contact_main" }, [
    _c("div", { staticClass: "wrap_div" }, [
      _c("div", { staticClass: "header_cntct" }, [
        _c("div", { staticClass: "txt_quick_strt" }, [_vm._v(" Quick start")]),
        _c("div", { staticClass: "hedr_box1" }, [
          _c("div", [
            _c(
              "svg",
              {
                attrs: {
                  width: "22",
                  height: "22",
                  viewBox: "0 0 22 22",
                  fill: "none",
                  xmlns: "http://www.w3.org/2000/svg"
                }
              },
              [
                _c("path", {
                  attrs: {
                    d:
                      "M11 0C4.925 0 0 4.925 0 11s4.925 11 11 11 11-4.925 11-11A11 11 0 0 0 11 0z",
                    fill: "#E0F5F1"
                  }
                }),
                _c("path", {
                  attrs: {
                    d:
                      "M14.29 8.33a.69.69 0 0 1 0 1l-4.34 4.34a.71.71 0 0 1-1 0l-2.24-2.26a.707.707 0 1 1 1-1l1.79 1.77 3.8-3.85a.71.71 0 0 1 .99 0z",
                    fill: "#009A79"
                  }
                })
              ]
            )
          ]),
          _c("div", { staticClass: "box1_txt" }, [
            _vm._v("Understand the Team Inbox")
          ])
        ]),
        _c("div", { staticClass: "btw_line" }),
        _vm._m(0),
        _c("div", { staticClass: "btw_line" }),
        _vm._m(1)
      ])
    ]),
    _vm._m(2),
    _c(
      "div",
      { staticClass: "wrap_div2" },
      [
        _c("div", { staticClass: "scnd_thrd_wrap" }, [
          _c("div", { staticClass: "scndry_navbar" }, [
            _c("div", { staticClass: "inptdiv" }, [
              _c(
                "svg",
                {
                  staticClass: "serch_img",
                  attrs: {
                    width: "16",
                    height: "16",
                    viewBox: "0 0 16 16",
                    xmlns: "http://www.w3.org/2000/svg"
                  }
                },
                [
                  _c("g", { attrs: { fill: "none", "fill-rule": "evenodd" } }, [
                    _c("path", {
                      attrs: {
                        "fill-opacity": ".01",
                        fill: "#FFF",
                        opacity: ".01",
                        d: "M1 1h14v14H1z"
                      }
                    }),
                    _c("g", { attrs: { stroke: "#000" } }, [
                      _c("path", {
                        attrs: {
                          "stroke-linecap": "round",
                          d: "M9.733 9.733L14.5 14.5"
                        }
                      }),
                      _c("path", {
                        attrs: {
                          d:
                            "M11.033 6.267a4.767 4.767 0 1 1-9.533 0 4.767 4.767 0 0 1 9.533 0z"
                        }
                      })
                    ])
                  ])
                ]
              ),
              _c("input", {
                attrs: { type: "text", placeholder: "Search your CRM..." }
              })
            ]),
            _c("div", { staticClass: "inner_navbar" }, [
              _c("div", { staticClass: "inner_txt" }, [
                _vm._v("Your trial ends in 14 days "),
                _c(
                  "svg",
                  {
                    staticClass: "warn_img",
                    attrs: {
                      "data-toggle": "tooltip",
                      "data-placement": "bottom",
                      "data-html": "true",
                      "data-original-title":
                        "Your current plan is <b>Freshworks CS Suite Enterprise</b>",
                      xmlns: "http://www.w3.org/2000/svg",
                      viewBox: "0 0 20 20"
                    }
                  },
                  [
                    _c("g", { attrs: { "data-name": "Layer 1" } }, [
                      _c("path", {
                        attrs: {
                          d:
                            "M10 20a10 10 0 1 1 10-10 10 10 0 0 1-10 10zm0-18.6a8.6 8.6 0 1 0 8.6 8.6A8.61 8.61 0 0 0 10 1.4z"
                        }
                      }),
                      _c("path", {
                        attrs: {
                          d:
                            "M11.29 13.33h-.59V9.45a.7.7 0 0 0-.7-.7H8.71a.7.7 0 1 0 0 1.4h.59v3.18h-.59a.7.7 0 1 0 0 1.4h2.58a.7.7 0 0 0 0-1.4zM10 5.27a1.05 1.05 0 1 1-1 1.05 1 1 0 0 1 1-1.05z"
                        }
                      })
                    ])
                  ]
                )
              ]),
              _vm._m(3),
              _vm._m(4),
              _vm._m(5)
            ]),
            _c("div", { staticClass: "navbr_divider" }),
            _vm._m(6),
            _c("div", { staticClass: "navbr_divider" }),
            _vm._m(7),
            _c("div", { staticClass: "navbr_divider" }),
            _c("div", { staticClass: "name_a" }, [_vm._v("A")])
          ]),
          _c("div", { staticClass: "thrd_bar" }, [
            _vm._m(8),
            _c("div", { staticClass: "section_two" }, [
              _c("button", { staticClass: "cutmiz_tble" }, [
                _c(
                  "svg",
                  {
                    staticClass:
                      "icon--container_WX8MsF4aQZ5i3RN1  svg-md undefined m-r-5",
                    attrs: {
                      width: "1em",
                      height: "1em",
                      viewBox: "0 0 14 14",
                      fill: "none",
                      xmlns: "http://www.w3.org/2000/svg"
                    }
                  },
                  [
                    _c("path", {
                      attrs: {
                        opacity: "0.01",
                        fill: "#fff",
                        "fill-opacity": "0.2",
                        d: "M0 0h14v14H0z"
                      }
                    }),
                    _c("path", {
                      attrs: {
                        stroke: "#333",
                        "stroke-linecap": "round",
                        "stroke-linejoin": "round",
                        d: "M2 7.5v6M2 .5v3"
                      }
                    }),
                    _c("circle", {
                      attrs: {
                        cx: "2",
                        cy: "5.5",
                        r: "1.5",
                        stroke: "#333",
                        "stroke-linecap": "round",
                        "stroke-linejoin": "round"
                      }
                    }),
                    _c("path", {
                      attrs: {
                        d: "M7 11.5v2M7 .5v7",
                        stroke: "#333",
                        "stroke-linecap": "round",
                        "stroke-linejoin": "round"
                      }
                    }),
                    _c("circle", {
                      attrs: {
                        cx: "7",
                        cy: "9.5",
                        r: "1.5",
                        stroke: "#333",
                        "stroke-linecap": "round",
                        "stroke-linejoin": "round"
                      }
                    }),
                    _c("path", {
                      attrs: {
                        stroke: "#333",
                        "stroke-linecap": "round",
                        "stroke-linejoin": "round",
                        d: "M12 7.5v6M12 .5v3"
                      }
                    }),
                    _c("circle", {
                      attrs: {
                        cx: "12",
                        cy: "5.5",
                        r: "1.5",
                        stroke: "#333",
                        "stroke-linecap": "round",
                        "stroke-linejoin": "round"
                      }
                    })
                  ]
                ),
                _vm._v(" Customize table ")
              ]),
              _c("div", { staticClass: "imprt_btns_div" }, [
                _c("button", { staticClass: "imprt_btn" }, [
                  _c(
                    "svg",
                    {
                      staticClass: "m-r-5",
                      attrs: {
                        width: "1em",
                        height: "1em",
                        viewBox: "0 0 14 14",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg"
                      }
                    },
                    [
                      _c("path", {
                        attrs: {
                          opacity: "0.01",
                          fill: "#fff",
                          "fill-opacity": "0.01",
                          d: "M0 0h14v14H0z"
                        }
                      }),
                      _c("path", {
                        attrs: {
                          d: "M7 .5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13Z",
                          stroke: "#384551",
                          "stroke-linecap": "round",
                          "stroke-linejoin": "round"
                        }
                      }),
                      _c("path", {
                        attrs: {
                          d: "M4.4 7 7 9.6 9.6 7M7 4.4v5.2",
                          stroke: "#384551",
                          "stroke-linecap": "round",
                          "stroke-linejoin": "round"
                        }
                      })
                    ]
                  ),
                  _vm._v(" Import Contacts ")
                ]),
                _vm._m(9)
              ]),
              _c("div", { staticClass: "add_cntct_btn_div" }, [
                _c("button", { staticClass: "add_cntct_btn" }, [
                  _c(
                    "svg",
                    {
                      attrs: {
                        width: "1em",
                        height: "1em",
                        viewBox: "0 0 14 14",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg"
                      }
                    },
                    [
                      _c("path", {
                        attrs: {
                          opacity: "0.01",
                          fill: "#fff",
                          "fill-opacity": "0.01",
                          d: "M0 0h14v14H0z"
                        }
                      }),
                      _c("path", {
                        attrs: {
                          d: "M3.285 7h7.429M7 3.286v7.428",
                          stroke: "#fff",
                          "stroke-linecap": "round"
                        }
                      }),
                      _c("rect", {
                        attrs: {
                          x: "0.5",
                          y: "0.5",
                          width: "13",
                          height: "13",
                          rx: "6.5",
                          stroke: "#fff",
                          "stroke-linecap": "round",
                          "stroke-linejoin": "round"
                        }
                      })
                    ]
                  ),
                  _vm._v(" Add Contact ")
                ])
              ])
            ])
          ])
        ]),
        _c("div", { staticClass: "forth_bar" }, [
          _c("div", { staticClass: "forth_sect_one" }, [
            _c("div", { staticClass: "tabl_btn_div" }, [
              _c("button", { staticClass: "tabl_btn" }, [
                _c(
                  "svg",
                  {
                    staticClass:
                      "icon--container_WX8MsF4aQZ5i3RN1   vt__item-icon_MOzQfW1J23ifi3kW",
                    attrs: {
                      width: "1em",
                      height: "1em",
                      viewBox: "0 0 14 14",
                      fill: "none",
                      xmlns: "http://www.w3.org/2000/svg"
                    }
                  },
                  [
                    _c("path", {
                      attrs: {
                        "fill-rule": "evenodd",
                        "clip-rule": "evenodd",
                        d:
                          "M1.5 0A1.5 1.5 0 0 0 0 1.5v11A1.5 1.5 0 0 0 1.5 14h11a1.5 1.5 0 0 0 1.5-1.5v-11A1.5 1.5 0 0 0 12.5 0h-11ZM1 1.5a.5.5 0 0 1 .5-.5h2v2.5H1v-2Zm0 3v8a.5.5 0 0 0 .5.5h2V4.5H1ZM4.5 13h8a.5.5 0 0 0 .5-.5v-8H4.5V13ZM13 3.5v-2a.5.5 0 0 0-.5-.5h-8v2.5H13Z",
                        fill: "#000"
                      }
                    })
                  ]
                ),
                _vm._v(" Table "),
                _c("select", { attrs: { name: "", id: "" } })
              ])
            ]),
            _c("div", [
              _c(
                "svg",
                {
                  staticClass: "svg-md icon-style_myh0__iGZZd8UNMi",
                  attrs: {
                    width: "1em",
                    height: "1em",
                    viewBox: "0 0 15 14",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                  }
                },
                [
                  _c("path", {
                    attrs: {
                      opacity: "0.01",
                      fill: "#fff",
                      "fill-opacity": "0.01",
                      d: "M1 0h14v14H1z"
                    }
                  }),
                  _c("path", {
                    attrs: {
                      d:
                        "M7.95 1h6.503M7.95 5h6.503M7.95 9h6.503M7.95 13h6.503",
                      stroke: "#384551",
                      "stroke-linecap": "round"
                    }
                  }),
                  _c("path", {
                    attrs: {
                      d:
                        "M1.484 3.188 3.67 1 5.86 3.188M5.859 10.813 3.67 13l-2.187-2.188M3.671 12.989V1",
                      stroke: "#384551",
                      "stroke-linecap": "round",
                      "stroke-linejoin": "round"
                    }
                  })
                ]
              )
            ]),
            _c("div", { staticClass: "tabl_btn_div" }, [
              _c("button", { staticClass: "tabl_btn2" }, [
                _c(
                  "svg",
                  {
                    staticClass: "icon--container_WX8MsF4aQZ5i3RN1  svg-md ",
                    attrs: {
                      width: "1em",
                      height: "1em",
                      viewBox: "0 0 14 14",
                      fill: "none",
                      xmlns: "http://www.w3.org/2000/svg"
                    }
                  },
                  [
                    _c("path", {
                      attrs: {
                        d:
                          "M.5 10.25 7 13.5l6.5-3.25M.5 7 7 10.25 13.5 7M7 .5.5 3.75 7 7l6.5-3.25L7 .5Z",
                        stroke: "#384551",
                        "stroke-linecap": "round",
                        "stroke-linejoin": "round"
                      }
                    })
                  ]
                ),
                _vm._v(" Bulk actions ")
              ])
            ]),
            _c("div", { staticClass: "tabl_btn_div" }, [
              _c("button", { staticClass: "tabl_btn2" }, [
                _c(
                  "svg",
                  {
                    staticClass: "icon--container_WX8MsF4aQZ5i3RN1  svg-md ",
                    attrs: {
                      width: "1em",
                      height: "1em",
                      viewBox: "0 0 14 15",
                      fill: "none",
                      xmlns: "http://www.w3.org/2000/svg"
                    }
                  },
                  [
                    _c("path", {
                      attrs: {
                        opacity: "0.01",
                        fill: "#fff",
                        "fill-opacity": "0.01",
                        d: "M0 .5h14v14H0z"
                      }
                    }),
                    _c("path", {
                      attrs: {
                        stroke: "#384551",
                        "stroke-linecap": "round",
                        d: "M.5 3.5h13M2.5 7.5h9M5.5 11.5h3"
                      }
                    })
                  ]
                ),
                _vm._v(" 1 filter applied ")
              ])
            ])
          ])
        ]),
        _c("div", { staticClass: "table-responsive" }, [
          _c(
            "table",
            {
              staticClass: "table  table-hover table-bordered table-responsive"
            },
            [
              _vm._m(10),
              _c("tbody", [
                _c(
                  "tr",
                  {
                    directives: [
                      {
                        name: "b-toggle",
                        rawName: "v-b-toggle.sidebar-1",
                        modifiers: { "sidebar-1": true }
                      }
                    ]
                  },
                  [
                    _vm._m(11),
                    _c("td", { staticClass: "tble_txt" }, [
                      _vm._v("lauranordasample@gmail.com")
                    ]),
                    _c("td", { staticClass: "tble_txt" }, [
                      _vm._v("4167348672")
                    ]),
                    _c("td", { staticClass: "tble_txt" }, [
                      _vm._v("+ Add task")
                    ]),
                    _c("td", { staticClass: "tble_txt" }, [
                      _vm._v("+ Click to Add ")
                    ]),
                    _c("td", { staticClass: "tble_txt" }, [
                      _c(
                        "button",
                        { staticClass: "badge", attrs: { type: "button" } },
                        [
                          _c(
                            "svg",
                            {
                              staticClass:
                                "icon--container_WX8MsF4aQZ5i3RN1  svg-md ",
                              attrs: {
                                width: "1em",
                                height: "1em",
                                viewBox: "0 0 14 13",
                                fill: "none",
                                xmlns: "http://www.w3.org/2000/svg"
                              }
                            },
                            [
                              _c("g", { attrs: { stroke: "#333" } }, [
                                _c("path", {
                                  attrs: {
                                    d:
                                      "M2.284 9.746a.1.1 0 0 0 .096.072h9.246a.1.1 0 0 0 .096-.072l1.626-5.75a.2.2 0 0 0-.292-.227L9.584 5.765a.1.1 0 0 1-.138-.04L7.18 1.377a.2.2 0 0 0-.354 0l-2.27 4.348a.1.1 0 0 1-.139.04L.945 3.77a.2.2 0 0 0-.292.228l1.631 5.749Z"
                                  }
                                }),
                                _c("path", {
                                  attrs: {
                                    d: "M2.401 12.103h9.2",
                                    "stroke-linecap": "round"
                                  }
                                })
                              ])
                            ]
                          ),
                          _vm._v(" ajaisvraj")
                        ]
                      )
                    ]),
                    _c("td", [
                      _c(
                        "button",
                        { staticClass: "btn_won", attrs: { type: "button" } },
                        [
                          _c(
                            "svg",
                            {
                              staticClass: "status_icon green",
                              attrs: {
                                width: "1em",
                                height: "1em",
                                viewBox: "0 0 14 12",
                                fill: "none",
                                xmlns: "http://www.w3.org/2000/svg"
                              }
                            },
                            [
                              _c("path", {
                                attrs: {
                                  opacity: "0.01",
                                  fill: "#fff",
                                  "fill-opacity": "0.2",
                                  d: "M1 0h12v12H1z"
                                }
                              }),
                              _c("path", {
                                attrs: {
                                  opacity: "0.01",
                                  fill: "#fff",
                                  "fill-opacity": "0.01",
                                  d: "M1 0h12v12H1z"
                                }
                              }),
                              _c("path", {
                                attrs: {
                                  "clip-rule": "evenodd",
                                  d:
                                    "M9.189 10.47h-7.76L4.81 6.092 1.43 1.715h7.76l3.383 4.377-3.383 4.378Z",
                                  stroke: "#264966",
                                  "stroke-width": "0.86",
                                  "stroke-linecap": "round",
                                  "stroke-linejoin": "round"
                                }
                              })
                            ]
                          ),
                          _vm._v(" Won")
                        ]
                      )
                    ]),
                    _vm._m(12),
                    _c("td")
                  ]
                ),
                _c(
                  "tr",
                  {
                    directives: [
                      {
                        name: "b-toggle",
                        rawName: "v-b-toggle.sidebar-1",
                        modifiers: { "sidebar-1": true }
                      }
                    ]
                  },
                  [
                    _vm._m(13),
                    _c("td", { staticClass: "tble_txt" }, [
                      _vm._v("lauranordasample@gmail.com")
                    ]),
                    _c("td", { staticClass: "tble_txt" }, [
                      _vm._v("4167348672")
                    ]),
                    _c("td", { staticClass: "tble_txt" }, [
                      _vm._v("+ Add task")
                    ]),
                    _c("td", { staticClass: "tble_txt" }, [
                      _vm._v("+ Click to Add ")
                    ]),
                    _c("td", { staticClass: "tble_txt" }, [
                      _c(
                        "button",
                        { staticClass: "badge", attrs: { type: "button" } },
                        [
                          _c(
                            "svg",
                            {
                              staticClass:
                                "icon--container_WX8MsF4aQZ5i3RN1  svg-md ",
                              attrs: {
                                width: "1em",
                                height: "1em",
                                viewBox: "0 0 14 13",
                                fill: "none",
                                xmlns: "http://www.w3.org/2000/svg"
                              }
                            },
                            [
                              _c("g", { attrs: { stroke: "#333" } }, [
                                _c("path", {
                                  attrs: {
                                    d:
                                      "M2.284 9.746a.1.1 0 0 0 .096.072h9.246a.1.1 0 0 0 .096-.072l1.626-5.75a.2.2 0 0 0-.292-.227L9.584 5.765a.1.1 0 0 1-.138-.04L7.18 1.377a.2.2 0 0 0-.354 0l-2.27 4.348a.1.1 0 0 1-.139.04L.945 3.77a.2.2 0 0 0-.292.228l1.631 5.749Z"
                                  }
                                }),
                                _c("path", {
                                  attrs: {
                                    d: "M2.401 12.103h9.2",
                                    "stroke-linecap": "round"
                                  }
                                })
                              ])
                            ]
                          ),
                          _vm._v(" ajaisvraj")
                        ]
                      )
                    ]),
                    _c("td", [
                      _c(
                        "button",
                        { staticClass: "btn_won", attrs: { type: "button" } },
                        [
                          _c(
                            "svg",
                            {
                              staticClass: "status_icon green",
                              attrs: {
                                width: "1em",
                                height: "1em",
                                viewBox: "0 0 14 12",
                                fill: "none",
                                xmlns: "http://www.w3.org/2000/svg"
                              }
                            },
                            [
                              _c("path", {
                                attrs: {
                                  opacity: "0.01",
                                  fill: "#fff",
                                  "fill-opacity": "0.2",
                                  d: "M1 0h12v12H1z"
                                }
                              }),
                              _c("path", {
                                attrs: {
                                  opacity: "0.01",
                                  fill: "#fff",
                                  "fill-opacity": "0.01",
                                  d: "M1 0h12v12H1z"
                                }
                              }),
                              _c("path", {
                                attrs: {
                                  "clip-rule": "evenodd",
                                  d:
                                    "M9.189 10.47h-7.76L4.81 6.092 1.43 1.715h7.76l3.383 4.377-3.383 4.378Z",
                                  stroke: "#264966",
                                  "stroke-width": "0.86",
                                  "stroke-linecap": "round",
                                  "stroke-linejoin": "round"
                                }
                              })
                            ]
                          ),
                          _vm._v(" Won")
                        ]
                      )
                    ]),
                    _vm._m(14),
                    _c("td")
                  ]
                ),
                _c(
                  "tr",
                  {
                    directives: [
                      {
                        name: "b-toggle",
                        rawName: "v-b-toggle.sidebar-1",
                        modifiers: { "sidebar-1": true }
                      }
                    ]
                  },
                  [
                    _vm._m(15),
                    _c("td", { staticClass: "tble_txt" }, [
                      _vm._v("lauranordasample@gmail.com")
                    ]),
                    _c("td", { staticClass: "tble_txt" }, [
                      _vm._v("4167348672")
                    ]),
                    _c("td", { staticClass: "tble_txt" }, [
                      _vm._v("+ Add task")
                    ]),
                    _c("td", { staticClass: "tble_txt" }, [
                      _vm._v("+ Click to Add ")
                    ]),
                    _c("td", { staticClass: "tble_txt" }, [
                      _c(
                        "button",
                        { staticClass: "badge", attrs: { type: "button" } },
                        [
                          _c(
                            "svg",
                            {
                              staticClass:
                                "icon--container_WX8MsF4aQZ5i3RN1  svg-md ",
                              attrs: {
                                width: "1em",
                                height: "1em",
                                viewBox: "0 0 14 13",
                                fill: "none",
                                xmlns: "http://www.w3.org/2000/svg"
                              }
                            },
                            [
                              _c("g", { attrs: { stroke: "#333" } }, [
                                _c("path", {
                                  attrs: {
                                    d:
                                      "M2.284 9.746a.1.1 0 0 0 .096.072h9.246a.1.1 0 0 0 .096-.072l1.626-5.75a.2.2 0 0 0-.292-.227L9.584 5.765a.1.1 0 0 1-.138-.04L7.18 1.377a.2.2 0 0 0-.354 0l-2.27 4.348a.1.1 0 0 1-.139.04L.945 3.77a.2.2 0 0 0-.292.228l1.631 5.749Z"
                                  }
                                }),
                                _c("path", {
                                  attrs: {
                                    d: "M2.401 12.103h9.2",
                                    "stroke-linecap": "round"
                                  }
                                })
                              ])
                            ]
                          ),
                          _vm._v(" ajaisvraj")
                        ]
                      )
                    ]),
                    _c("td", [
                      _c(
                        "button",
                        { staticClass: "btn_won", attrs: { type: "button" } },
                        [
                          _c(
                            "svg",
                            {
                              staticClass: "status_icon green",
                              attrs: {
                                width: "1em",
                                height: "1em",
                                viewBox: "0 0 14 12",
                                fill: "none",
                                xmlns: "http://www.w3.org/2000/svg"
                              }
                            },
                            [
                              _c("path", {
                                attrs: {
                                  opacity: "0.01",
                                  fill: "#fff",
                                  "fill-opacity": "0.2",
                                  d: "M1 0h12v12H1z"
                                }
                              }),
                              _c("path", {
                                attrs: {
                                  opacity: "0.01",
                                  fill: "#fff",
                                  "fill-opacity": "0.01",
                                  d: "M1 0h12v12H1z"
                                }
                              }),
                              _c("path", {
                                attrs: {
                                  "clip-rule": "evenodd",
                                  d:
                                    "M9.189 10.47h-7.76L4.81 6.092 1.43 1.715h7.76l3.383 4.377-3.383 4.378Z",
                                  stroke: "#264966",
                                  "stroke-width": "0.86",
                                  "stroke-linecap": "round",
                                  "stroke-linejoin": "round"
                                }
                              })
                            ]
                          ),
                          _vm._v(" Won")
                        ]
                      )
                    ]),
                    _vm._m(16),
                    _c("td")
                  ]
                ),
                _c(
                  "tr",
                  {
                    directives: [
                      {
                        name: "b-toggle",
                        rawName: "v-b-toggle.sidebar-1",
                        modifiers: { "sidebar-1": true }
                      }
                    ]
                  },
                  [
                    _vm._m(17),
                    _c("td", { staticClass: "tble_txt" }, [
                      _vm._v("lauranordasample@gmail.com")
                    ]),
                    _c("td", { staticClass: "tble_txt" }, [
                      _vm._v("4167348672")
                    ]),
                    _c("td", { staticClass: "tble_txt" }, [
                      _vm._v("+ Add task")
                    ]),
                    _c("td", { staticClass: "tble_txt" }, [
                      _vm._v("+ Click to Add ")
                    ]),
                    _c("td", { staticClass: "tble_txt" }, [
                      _c(
                        "button",
                        { staticClass: "badge", attrs: { type: "button" } },
                        [
                          _c(
                            "svg",
                            {
                              staticClass:
                                "icon--container_WX8MsF4aQZ5i3RN1  svg-md ",
                              attrs: {
                                width: "1em",
                                height: "1em",
                                viewBox: "0 0 14 13",
                                fill: "none",
                                xmlns: "http://www.w3.org/2000/svg"
                              }
                            },
                            [
                              _c("g", { attrs: { stroke: "#333" } }, [
                                _c("path", {
                                  attrs: {
                                    d:
                                      "M2.284 9.746a.1.1 0 0 0 .096.072h9.246a.1.1 0 0 0 .096-.072l1.626-5.75a.2.2 0 0 0-.292-.227L9.584 5.765a.1.1 0 0 1-.138-.04L7.18 1.377a.2.2 0 0 0-.354 0l-2.27 4.348a.1.1 0 0 1-.139.04L.945 3.77a.2.2 0 0 0-.292.228l1.631 5.749Z"
                                  }
                                }),
                                _c("path", {
                                  attrs: {
                                    d: "M2.401 12.103h9.2",
                                    "stroke-linecap": "round"
                                  }
                                })
                              ])
                            ]
                          ),
                          _vm._v(" ajaisvraj")
                        ]
                      )
                    ]),
                    _c("td", [
                      _c(
                        "button",
                        { staticClass: "btn_won", attrs: { type: "button" } },
                        [
                          _c(
                            "svg",
                            {
                              staticClass: "status_icon green",
                              attrs: {
                                width: "1em",
                                height: "1em",
                                viewBox: "0 0 14 12",
                                fill: "none",
                                xmlns: "http://www.w3.org/2000/svg"
                              }
                            },
                            [
                              _c("path", {
                                attrs: {
                                  opacity: "0.01",
                                  fill: "#fff",
                                  "fill-opacity": "0.2",
                                  d: "M1 0h12v12H1z"
                                }
                              }),
                              _c("path", {
                                attrs: {
                                  opacity: "0.01",
                                  fill: "#fff",
                                  "fill-opacity": "0.01",
                                  d: "M1 0h12v12H1z"
                                }
                              }),
                              _c("path", {
                                attrs: {
                                  "clip-rule": "evenodd",
                                  d:
                                    "M9.189 10.47h-7.76L4.81 6.092 1.43 1.715h7.76l3.383 4.377-3.383 4.378Z",
                                  stroke: "#264966",
                                  "stroke-width": "0.86",
                                  "stroke-linecap": "round",
                                  "stroke-linejoin": "round"
                                }
                              })
                            ]
                          ),
                          _vm._v(" Won")
                        ]
                      )
                    ]),
                    _vm._m(18),
                    _c("td")
                  ]
                ),
                _c(
                  "tr",
                  {
                    directives: [
                      {
                        name: "b-toggle",
                        rawName: "v-b-toggle.sidebar-1",
                        modifiers: { "sidebar-1": true }
                      }
                    ]
                  },
                  [
                    _vm._m(19),
                    _c("td", { staticClass: "tble_txt" }, [
                      _vm._v("lauranordasample@gmail.com")
                    ]),
                    _c("td", { staticClass: "tble_txt" }, [
                      _vm._v("4167348672")
                    ]),
                    _c("td", { staticClass: "tble_txt" }, [
                      _vm._v("+ Add task")
                    ]),
                    _c("td", { staticClass: "tble_txt" }, [
                      _vm._v("+ Click to Add ")
                    ]),
                    _c("td", { staticClass: "tble_txt" }, [
                      _c(
                        "button",
                        { staticClass: "badge", attrs: { type: "button" } },
                        [
                          _c(
                            "svg",
                            {
                              staticClass:
                                "icon--container_WX8MsF4aQZ5i3RN1  svg-md ",
                              attrs: {
                                width: "1em",
                                height: "1em",
                                viewBox: "0 0 14 13",
                                fill: "none",
                                xmlns: "http://www.w3.org/2000/svg"
                              }
                            },
                            [
                              _c("g", { attrs: { stroke: "#333" } }, [
                                _c("path", {
                                  attrs: {
                                    d:
                                      "M2.284 9.746a.1.1 0 0 0 .096.072h9.246a.1.1 0 0 0 .096-.072l1.626-5.75a.2.2 0 0 0-.292-.227L9.584 5.765a.1.1 0 0 1-.138-.04L7.18 1.377a.2.2 0 0 0-.354 0l-2.27 4.348a.1.1 0 0 1-.139.04L.945 3.77a.2.2 0 0 0-.292.228l1.631 5.749Z"
                                  }
                                }),
                                _c("path", {
                                  attrs: {
                                    d: "M2.401 12.103h9.2",
                                    "stroke-linecap": "round"
                                  }
                                })
                              ])
                            ]
                          ),
                          _vm._v(" ajaisvraj")
                        ]
                      )
                    ]),
                    _c("td", [
                      _c(
                        "button",
                        {
                          directives: [
                            {
                              name: "b-toggle",
                              rawName: "v-b-toggle.sidebar-1",
                              modifiers: { "sidebar-1": true }
                            }
                          ],
                          staticClass: "btn_won",
                          attrs: { type: "button" }
                        },
                        [
                          _c(
                            "svg",
                            {
                              staticClass: "status_icon green",
                              attrs: {
                                width: "1em",
                                height: "1em",
                                viewBox: "0 0 14 12",
                                fill: "none",
                                xmlns: "http://www.w3.org/2000/svg"
                              }
                            },
                            [
                              _c("path", {
                                attrs: {
                                  opacity: "0.01",
                                  fill: "#fff",
                                  "fill-opacity": "0.2",
                                  d: "M1 0h12v12H1z"
                                }
                              }),
                              _c("path", {
                                attrs: {
                                  opacity: "0.01",
                                  fill: "#fff",
                                  "fill-opacity": "0.01",
                                  d: "M1 0h12v12H1z"
                                }
                              }),
                              _c("path", {
                                attrs: {
                                  "clip-rule": "evenodd",
                                  d:
                                    "M9.189 10.47h-7.76L4.81 6.092 1.43 1.715h7.76l3.383 4.377-3.383 4.378Z",
                                  stroke: "#264966",
                                  "stroke-width": "0.86",
                                  "stroke-linecap": "round",
                                  "stroke-linejoin": "round"
                                }
                              })
                            ]
                          ),
                          _vm._v(" Won")
                        ]
                      )
                    ]),
                    _vm._m(20),
                    _c("td")
                  ]
                )
              ])
            ]
          )
        ]),
        _c("b-sidebar", { attrs: { id: "sidebar-1", right: "", shadow: "" } }, [
          _c("div", { staticClass: "px-3 py-2" }, [
            _c("div", { staticClass: "profl_sect" }, [
              _c("img", {
                staticClass: "modal_img",
                attrs: { src: "/dashboard/prof_pic_dashbrd.png", alt: "" }
              }),
              _c(
                "h2",
                {
                  staticStyle: {
                    "font-weight": "800px",
                    "font-size": "18px",
                    color: "black"
                  }
                },
                [
                  _vm._v("Laura Norda (sample) "),
                  _c("br"),
                  _c("h6", [_vm._v("Sales executive")])
                ]
              ),
              _c("div", { staticClass: "dtl_btn_top" }, [
                _c("button", { staticClass: "tabl_btn" }, [
                  _c(
                    "svg",
                    {
                      staticClass: "svg-md mg-r-5 custom-button-svg",
                      attrs: {
                        width: "14",
                        height: "14",
                        viewBox: "0 0 14 14",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg"
                      }
                    },
                    [
                      _c("path", {
                        attrs: {
                          d: "M14 0H0v14h14V0z",
                          fill: "#fff",
                          "fill-opacity": ".01"
                        }
                      }),
                      _c("path", {
                        attrs: {
                          d:
                            "M7.696 6.304l2.803-2.803M6.567 10.5H3.5V7.433M7.433 3.5H10.5v3.067M10.5 3.5l-7 7",
                          stroke: "#333",
                          "stroke-linecap": "round",
                          "stroke-linejoin": "round"
                        }
                      }),
                      _c("rect", {
                        attrs: {
                          x: ".5",
                          y: ".5",
                          width: "13",
                          height: "13",
                          rx: "2",
                          stroke: "#333",
                          "stroke-linecap": "round",
                          "stroke-linejoin": "round"
                        }
                      })
                    ]
                  ),
                  _vm._v(" See all Details")
                ])
              ]),
              _c("div", { staticClass: "dtl_btn_top2" }, [
                _c("button", { staticClass: "tabl_btn" }, [
                  _c(
                    "svg",
                    {
                      staticClass: " custom-button-svg",
                      attrs: {
                        width: "8",
                        height: "14",
                        viewBox: "0 0 8 14",
                        xmlns: "http://www.w3.org/2000/svg"
                      }
                    },
                    [
                      _c(
                        "g",
                        { attrs: { fill: "none", "fill-rule": "evenodd" } },
                        [
                          _c("path", {
                            attrs: {
                              "fill-opacity": ".01",
                              fill: "#FFF",
                              "fill-rule": "nonzero",
                              opacity: ".01",
                              d: "M-3 0h14v14H-3z"
                            }
                          }),
                          _c("path", {
                            attrs: {
                              d: "M7.5.5L1 7l6.5 6.5",
                              opacity: ".6",
                              stroke: "#000",
                              "stroke-linecap": "round",
                              "stroke-linejoin": "round"
                            }
                          })
                        ]
                      )
                    ]
                  )
                ]),
                _c("button", { staticClass: "tabl_btn" }, [
                  _c(
                    "svg",
                    {
                      staticClass: " custom-button-svg",
                      attrs: {
                        width: "8",
                        height: "14",
                        viewBox: "0 0 8 14",
                        xmlns: "http://www.w3.org/2000/svg"
                      }
                    },
                    [
                      _c(
                        "g",
                        { attrs: { fill: "none", "fill-rule": "evenodd" } },
                        [
                          _c("path", {
                            attrs: {
                              "fill-opacity": ".01",
                              fill: "#FFF",
                              "fill-rule": "nonzero",
                              opacity: ".01",
                              d: "M11 0H-3v14h14z"
                            }
                          }),
                          _c("path", {
                            attrs: {
                              d: "M.5.5L7 7 .5 13.5",
                              opacity: ".6",
                              stroke: "#000",
                              "stroke-linecap": "round",
                              "stroke-linejoin": "round"
                            }
                          })
                        ]
                      )
                    ]
                  )
                ])
              ])
            ]),
            _c("div", { staticClass: "btn_div" }, [
              _c("div", { staticClass: "top_btns" }, [
                _c("div", { staticClass: "popup_btns_div" }, [
                  _c("button", { staticClass: "tabl_btn" }, [
                    _c(
                      "svg",
                      {
                        staticClass:
                          "svg-md valign-middle mg-r-5 custom-button-svg",
                        attrs: {
                          width: "18",
                          height: "18",
                          viewBox: "0 0 18 18",
                          xmlns: "http://www.w3.org/2000/svg"
                        }
                      },
                      [
                        _c(
                          "g",
                          {
                            attrs: {
                              stroke: "#000",
                              fill: "none",
                              "fill-rule": "evenodd"
                            }
                          },
                          [
                            _c("path", {
                              attrs: {
                                d:
                                  "M10.921.52H4.113c-.94 0-1.702.761-1.702 1.701v13.616c0 .94.762 1.702 1.702 1.702h10.212c.94 0 1.702-.762 1.702-1.702V5.625L10.921.52z"
                              }
                            }),
                            _c("path", {
                              attrs: {
                                d: "M10.921.52v4.105a1 1 0 0 0 1 1h4.106"
                              }
                            }),
                            _c("path", {
                              attrs: {
                                d:
                                  "M12.623 9.88H5.815M12.623 13.284H5.815M7.517 6.476H5.815",
                                "stroke-linecap": "round",
                                "stroke-linejoin": "round"
                              }
                            })
                          ]
                        )
                      ]
                    ),
                    _c("div", [_vm._v("Note")])
                  ])
                ])
              ]),
              _c("button", { staticClass: "tabl_btn" }, [
                _c(
                  "svg",
                  {
                    staticClass:
                      "svg-md valign-middle mg-r-5 custom-button-svg",
                    attrs: {
                      width: "18",
                      height: "18",
                      viewBox: "0 0 18 18",
                      xmlns: "http://www.w3.org/2000/svg"
                    }
                  },
                  [
                    _c(
                      "g",
                      {
                        attrs: {
                          stroke: "#000",
                          fill: "none",
                          "fill-rule": "evenodd"
                        }
                      },
                      [
                        _c("path", {
                          attrs: {
                            d:
                              "M10.703 1.75H4.141c-.906 0-1.641.705-1.641 1.575v12.6c0 .87.735 1.575 1.64 1.575h9.844c.906 0 1.641-.705 1.641-1.575V3.75a2 2 0 0 0-2-2h-2.922z"
                          }
                        }),
                        _c("g", { attrs: { "stroke-linecap": "round" } }, [
                          _c("path", {
                            attrs: {
                              d:
                                "M5.716.525v2.154M12.826.525v2.154M9.271.525v2.154"
                            }
                          })
                        ]),
                        _c("path", {
                          attrs: {
                            d:
                              "M5.563 10.48l2.456 2.398c.083.08.215.08.298 0L13 8.306",
                            "stroke-linecap": "round"
                          }
                        })
                      ]
                    )
                  ]
                ),
                _c("div", [_vm._v("Task")])
              ]),
              _c("button", { staticClass: "tabl_btn" }, [
                _c(
                  "svg",
                  {
                    staticClass:
                      "svg-md valign-middle mg-r-5 custom-button-svg",
                    attrs: {
                      width: "18",
                      height: "18",
                      viewBox: "0 0 18 18",
                      xmlns: "http://www.w3.org/2000/svg"
                    }
                  },
                  [
                    _c(
                      "g",
                      {
                        attrs: {
                          transform: "translate(1)",
                          stroke: "#000",
                          fill: "none",
                          "fill-rule": "evenodd",
                          "stroke-linecap": "round",
                          "stroke-linejoin": "round"
                        }
                      },
                      [
                        _c("rect", {
                          attrs: {
                            y: "1.778",
                            width: "16",
                            height: "15.8",
                            rx: "2"
                          }
                        }),
                        _c("path", {
                          attrs: { d: "M11.556.5v3M4.444.5v3M0 8.111h16" }
                        })
                      ]
                    )
                  ]
                ),
                _c("div", [_vm._v("Meeting")])
              ]),
              _c("button", { staticClass: "tabl_btn" }, [
                _c(
                  "svg",
                  {
                    staticClass: "svg-md valign-middle mg-r-5",
                    attrs: {
                      width: "20",
                      height: "20",
                      viewBox: "0 0 20 20",
                      xmlns: "http://www.w3.org/2000/svg"
                    }
                  },
                  [
                    _c("path", {
                      attrs: {
                        "fill-rule": "evenodd",
                        "clip-rule": "evenodd",
                        d:
                          "M10.7.7A.7.7 0 0 0 10 0H.7a.7.7 0 0 0-.7.7v18.6a.7.7 0 0 0 .7.7h18.6a.7.7 0 0 0 .7-.7V6.9a.7.7 0 0 0-.7-.7h-8.6V.7zM4 12.4a.92.92 0 0 0-.92.92v5.28H1.4V1.4h7.9v17.2H7.54v-5.28a.92.92 0 0 0-.92-.92H4zm13.36 2.9a.7.7 0 0 0-.7-.7h-4a.7.7 0 1 0 0 1.4h4a.7.7 0 0 0 .7-.7zm0-4a.7.7 0 0 0-.7-.7h-4a.7.7 0 1 0 0 1.4h4a.7.7 0 0 0 .7-.7zm-9.3-2.19a.7.7 0 0 0-.7-.7h-4a.7.7 0 1 0 0 1.4h4a.7.7 0 0 0 .7-.7zm0-3.98a.7.7 0 0 0-.7-.7h-4a.7.7 0 0 0 0 1.4h4a.7.7 0 0 0 .7-.7zM4.48 13.8h1.66v4.8H4.48v-4.8zm6.22-6.2h7.9v11h-7.9v-11z"
                      }
                    })
                  ]
                ),
                _c("div", [_vm._v("Add account")])
              ]),
              _c("button", { staticClass: "tabl_btn" }, [
                _c(
                  "svg",
                  {
                    staticClass: "svg-md",
                    attrs: {
                      width: "4",
                      height: "14",
                      viewBox: "0 0 4 14",
                      xmlns: "http://www.w3.org/2000/svg"
                    }
                  },
                  [
                    _c(
                      "g",
                      { attrs: { fill: "none", "fill-rule": "evenodd" } },
                      [
                        _c("path", {
                          attrs: {
                            "fill-opacity": ".01",
                            fill: "#FFF",
                            opacity: ".01",
                            d: "M-5 0H9v14H-5z"
                          }
                        }),
                        _c(
                          "g",
                          {
                            attrs: {
                              transform: "translate(.833 .583)",
                              fill: "#000"
                            }
                          },
                          [
                            _c("circle", {
                              attrs: { cx: "1.3", cy: "1.3", r: "1.3" }
                            }),
                            _c("circle", {
                              attrs: { cx: "1.3", cy: "6.5", r: "1.3" }
                            }),
                            _c("circle", {
                              attrs: { cx: "1.3", cy: "11.7", r: "1.3" }
                            })
                          ]
                        )
                      ]
                    )
                  ]
                )
              ])
            ]),
            _c("hr"),
            _c("br"),
            _c("div", { staticClass: "txt_lyf_cycle" }, [
              _c("h3", { staticClass: "overview_txt" }, [_vm._v("Overview")]),
              _c("button", { staticClass: "tabl_btn" }, [
                _c(
                  "svg",
                  {
                    staticClass: "svg-md custom-button-svg",
                    attrs: {
                      width: "18",
                      height: "18",
                      viewBox: "0 0 18 18",
                      xmlns: "http://www.w3.org/2000/svg"
                    }
                  },
                  [
                    _c(
                      "g",
                      { attrs: { fill: "none", "fill-rule": "evenodd" } },
                      [
                        _c("path", {
                          attrs: {
                            "fill-opacity": ".01",
                            fill: "#FFF",
                            opacity: ".01",
                            d: "M0 0h18v18H0z"
                          }
                        }),
                        _c(
                          "g",
                          {
                            attrs: {
                              stroke: "#000",
                              "stroke-linecap": "round",
                              "stroke-linejoin": "round"
                            }
                          },
                          [
                            _c("path", {
                              attrs: {
                                d:
                                  "M14.718 11.318c-.21.477-.11 1.034.255 1.407l.047.046a1.545 1.545 0 1 1-2.187 2.187l-.047-.047a1.275 1.275 0 0 0-1.406-.255c-.467.2-.77.659-.773 1.167v.132a1.545 1.545 0 0 1-3.09 0v-.07a1.275 1.275 0 0 0-.835-1.167 1.275 1.275 0 0 0-1.407.255l-.046.047a1.545 1.545 0 1 1-2.187-2.187l.047-.047c.364-.372.465-.93.255-1.406-.2-.467-.659-.77-1.167-.773h-.132a1.545 1.545 0 1 1 0-3.09h.07a1.275 1.275 0 0 0 1.167-.835c.21-.477.11-1.034-.255-1.407L2.98 5.23a1.545 1.545 0 1 1 2.187-2.187l.047.047c.372.364.93.465 1.406.255h.062c.467-.2.77-.659.773-1.167v-.132a1.545 1.545 0 1 1 3.09 0v.07c.002.508.306.967.773 1.167.477.21 1.034.11 1.407-.255l.046-.047a1.545 1.545 0 1 1 2.187 2.187l-.047.047c-.364.372-.465.93-.255 1.406v.062c.2.467.659.77 1.167.773h.132a1.545 1.545 0 0 1 0 3.09h-.07a1.275 1.275 0 0 0-1.167.773z"
                              }
                            }),
                            _c("circle", {
                              attrs: { cx: "9", cy: "9", r: "2" }
                            })
                          ]
                        )
                      ]
                    )
                  ]
                ),
                _c("div", [_vm._v("Customize overview")])
              ])
            ]),
            _c("br"),
            _c("div", { staticClass: "txt_lyf_cycle1" }, [
              _c("h6", [_vm._v("Life Cycle stage")]),
              _c("h6", [_vm._v("Status")])
            ]),
            _c("div", { staticClass: "txt_lyf_cycle2" }, [
              _c("h6", { staticClass: "text-primary" }, [
                _vm._v("Customer "),
                _c("select", { attrs: { name: "", id: "" } })
              ]),
              _c(
                "div",
                [
                  _c(
                    "b-progress",
                    { staticClass: "mb-3", attrs: { max: _vm.max } },
                    [
                      _c(
                        "b-progress-bar",
                        { attrs: { variant: "success", value: _vm.values[0] } },
                        [_c("b", { staticClass: "text-dark" }, [_vm._v("New")])]
                      ),
                      _vm._v(" | "),
                      _c(
                        "b-progress-bar",
                        { attrs: { variant: "success", value: _vm.values[1] } },
                        [
                          _c("b", { staticClass: "text-dark" }, [
                            _vm._v("Contacted")
                          ])
                        ]
                      ),
                      _vm._v("| "),
                      _c(
                        "b-progress-bar",
                        { attrs: { variant: "success", value: _vm.values[2] } },
                        [
                          _c("b", { staticClass: "text-dark" }, [
                            _vm._v("Interested / U")
                          ])
                        ]
                      ),
                      _vm._v("| "),
                      _c(
                        "b-progress-bar",
                        { attrs: { variant: "success", value: _vm.values[1] } },
                        [
                          _c("b", { staticClass: "text-dark" }, [
                            _vm._v("Qualified")
                          ])
                        ]
                      ),
                      _vm._v("| "),
                      _c(
                        "b-progress-bar",
                        { attrs: { variant: "light", value: _vm.values[1] } },
                        [
                          _c("b", { staticClass: "text-dark" }, [
                            _vm._v("Negotiation / Lo")
                          ])
                        ]
                      ),
                      _vm._v("| "),
                      _c(
                        "b-progress-bar",
                        { attrs: { variant: "light", value: _vm.values[1] } },
                        [
                          _c("b", { staticClass: "text-dark" }, [
                            _vm._v("Won / Churned")
                          ])
                        ]
                      )
                    ],
                    1
                  )
                ],
                1
              )
            ]),
            _c("hr"),
            _c("div", [
              _c("div", { staticClass: "tag_icon" }, [
                _c(
                  "svg",
                  {
                    staticClass: "tag_icon",
                    attrs: {
                      viewBox: "0 0 14 14",
                      fill: "none",
                      xmlns: "http://www.w3.org/2000/svg"
                    }
                  },
                  [
                    _c("path", {
                      attrs: {
                        "fill-rule": "evenodd",
                        "clip-rule": "evenodd",
                        d:
                          "M13.084 8.416l-4.661 4.661a1.3 1.3 0 0 1-1.84 0L1 7.5V1h6.5l5.584 5.583a1.3 1.3 0 0 1 0 1.833z",
                        stroke: "#000",
                        "stroke-linecap": "round",
                        "stroke-linejoin": "round"
                      }
                    }),
                    _c("path", {
                      attrs: {
                        d:
                          "M4.25 5.643a1.393 1.393 0 1 0 0-2.786 1.393 1.393 0 0 0 0 2.786z",
                        stroke: "#000"
                      }
                    })
                  ]
                ),
                _vm._v(" Click to add Tags ")
              ])
            ]),
            _c("hr"),
            _c("div", { staticClass: "more_dtls_div" }, [
              _c("div", [
                _c("h5", [_vm._v("Location")]),
                _c("h6", { staticClass: "text-info" }, [
                  _vm._v("Toronto, Ontario, Canada")
                ])
              ]),
              _c("div", [
                _c("h5", [_vm._v("Accounts")]),
                _c("h6", { staticClass: "text-info" }, [
                  _vm._v("Acme Inc (sample)")
                ])
              ]),
              _c("div", [
                _c("h5", [_vm._v("Emails")]),
                _c("h6", { staticClass: "text-dark" }, [
                  _vm._v("lauranordasample@gmail.com")
                ])
              ]),
              _c("div", [
                _c("h5", [_vm._v("Mobile")]),
                _c("h6", { staticClass: "text-dark" }, [_vm._v("19266343001")])
              ]),
              _c("div", [
                _c("h5", [_vm._v("Sales owner")]),
                _c("h6", { staticClass: "text-dark" }, [_vm._v("ajais vraj")])
              ]),
              _c("div", [
                _c("h5", [_vm._v("Created at")]),
                _c("h6", { staticClass: "text-dark" }, [_vm._v("a month ago")])
              ])
            ]),
            _vm._v(" Show all "),
            _c("select", { attrs: { name: "", id: "" } }),
            _c("hr"),
            _c("div", { staticClass: "text_area" }, [
              _c("input", {
                staticClass: "inpt_area",
                attrs: { type: "text", placeholder: "Add a note..." }
              }),
              _c("hr"),
              _c("p", { staticClass: "inpt_text" }, [
                _vm._v(
                  "Laura wants to buy one more license and will decide by the end of the month."
                )
              ]),
              _c("br"),
              _c("p", { staticClass: "inpt_text" }, [
                _vm._v("ajais vraj . 13 days ago")
              ])
            ]),
            _c("div", { staticClass: "bottom_icons" }, [
              _c("div", { staticClass: "icon_cover" }, [
                _c(
                  "svg",
                  {
                    staticClass:
                      "icon--container_WX8MsF4aQZ5i3RN1  card-icon_d2zbHgAjG6G91rwP ",
                    attrs: {
                      viewBox: "0 0 14 14",
                      xmlns: "http://www.w3.org/2000/svg",
                      width: "1em",
                      height: "1em"
                    }
                  },
                  [
                    _c(
                      "g",
                      { attrs: { fill: "none", "fill-rule": "evenodd" } },
                      [
                        _c("path", {
                          attrs: {
                            "fill-opacity": "0.2",
                            fill: "#FFF",
                            opacity: "0.01",
                            d: "M0 0h14v14H0z"
                          }
                        }),
                        _c("g", { attrs: { stroke: "#eb8344" } }, [
                          _c("path", {
                            attrs: {
                              d:
                                "m8.717 2.398 4.255 7.347a2 2 0 0 1-1.73 3.002h-8.51A2 2 0 0 1 1 9.745l4.255-7.347a2 2 0 0 1 3.461 0ZM7 9.603v1.121M7 3.615v4.807"
                            }
                          })
                        ])
                      ]
                    )
                  ]
                )
              ]),
              _c("div", [
                _vm._v("Couldn’t load this card. Try refreshing the page.")
              ])
            ]),
            _c("div", { staticClass: "bottom_icons2" }, [
              _c("div", { staticClass: "icon_cover2" }, [
                _c(
                  "svg",
                  {
                    staticClass:
                      "icon--container_WX8MsF4aQZ5i3RN1  card-icon_d2zbHgAjG6G91rwP ",
                    attrs: {
                      width: "1em",
                      height: "1em",
                      viewBox: "0 0 22 22",
                      fill: "none",
                      xmlns: "http://www.w3.org/2000/svg"
                    }
                  },
                  [
                    _c("path", {
                      attrs: {
                        opacity: "0.01",
                        fill: "#fff",
                        "fill-opacity": "0.2",
                        d: "M1 1h20v20H1z"
                      }
                    }),
                    _c("path", {
                      attrs: {
                        opacity: "0.01",
                        fill: "#A9A9EB",
                        d: "M1 1h20v20H1z"
                      }
                    }),
                    _c("rect", {
                      attrs: {
                        x: "1.313",
                        y: "3.465",
                        width: "19.375",
                        height: "17.222",
                        rx: "2",
                        fill: "#fff",
                        stroke: "#6E49B8",
                        "stroke-linecap": "round",
                        "stroke-linejoin": "round"
                      }
                    }),
                    _c("path", {
                      attrs: {
                        d:
                          "M1.313 5.465a2 2 0 0 1 2-2h15.374a2 2 0 0 1 2 2v2.844H1.313V5.465Z",
                        fill: "#B4A3D6",
                        stroke: "#6E49B8",
                        "stroke-linecap": "round",
                        "stroke-linejoin": "round"
                      }
                    }),
                    _c("path", {
                      attrs: {
                        d: "M15.306 1.313v4.305M6.694 1.313v4.305",
                        stroke: "#6E49B8",
                        "stroke-linecap": "round",
                        "stroke-linejoin": "round"
                      }
                    })
                  ]
                )
              ]),
              _c("div", [
                _vm._v("No upcoming meetings with Laura Norda. "),
                _c("br"),
                _c("b", { staticClass: "text-info" }, [_vm._v("Add meeting")])
              ])
            ]),
            _c("div", { staticClass: "bottom_icons2" }, [
              _c("div", { staticClass: "icon_cover" }, [
                _c(
                  "svg",
                  {
                    staticClass:
                      "icon--container_WX8MsF4aQZ5i3RN1  card-icon_d2zbHgAjG6G91rwP ",
                    attrs: {
                      xmlns: "http://www.w3.org/2000/svg",
                      width: "1em",
                      height: "1em",
                      viewBox: "0 0 22 15",
                      fill: "none"
                    }
                  },
                  [
                    _c("path", {
                      attrs: {
                        "fill-rule": "evenodd",
                        "clip-rule": "evenodd",
                        d:
                          "M1.313 2.75a2 2 0 0 1 2-2h15.374a2 2 0 0 1 2 2v8.799a2 2 0 0 1-2 2H3.313a2 2 0 0 1-2-2V2.75Z",
                        fill: "#FDDBB5",
                        stroke: "#E86F25",
                        "stroke-linecap": "round",
                        "stroke-linejoin": "round"
                      }
                    }),
                    _c("path", {
                      attrs: {
                        "fill-rule": "evenodd",
                        "clip-rule": "evenodd",
                        d:
                          "M1.313 2.54a.9.9 0 0 1 1.478-.69L11 8.749l8.209-6.897a.9.9 0 0 1 1.479.689v8.867a2 2 0 0 1-2 2H3.313a2 2 0 0 1-2-2V2.54Z",
                        fill: "#fff",
                        stroke: "#E86F25",
                        "stroke-linecap": "round",
                        "stroke-linejoin": "round"
                      }
                    })
                  ]
                )
              ]),
              _c("b", { staticClass: "text-dark" }, [
                _vm._v("Laura Norda sent an email "),
                _c("p", [_vm._v("5 Days ago")])
              ])
            ]),
            _c("div", { staticClass: "bottom_icons2" }, [
              _c("div", { staticClass: "icon_cover3" }, [
                _c(
                  "svg",
                  {
                    staticClass:
                      "icon--container_WX8MsF4aQZ5i3RN1  card-icon_d2zbHgAjG6G91rwP ",
                    attrs: {
                      xmlns: "http://www.w3.org/2000/svg",
                      width: "1em",
                      height: "1em",
                      viewBox: "0 0 21 21",
                      fill: "none"
                    }
                  },
                  [
                    _c("circle", {
                      attrs: {
                        cx: "10.236",
                        cy: "10.764",
                        r: "9.236",
                        fill: "#fff",
                        stroke: "#2895A4",
                        "stroke-linecap": "round",
                        "stroke-linejoin": "round"
                      }
                    }),
                    _c("circle", {
                      attrs: {
                        cx: "10.236",
                        cy: "10.764",
                        fill: "#ABECF5",
                        stroke: "#2895A4",
                        "stroke-linecap": "round",
                        "stroke-linejoin": "round",
                        r: "5.278"
                      }
                    }),
                    _c("circle", {
                      attrs: {
                        cx: "10.236",
                        cy: "10.764",
                        fill: "#fff",
                        r: "1.319"
                      }
                    }),
                    _c("path", {
                      attrs: {
                        d: "M10.236 10.764 18.1 2.9M18.1 1v1.9H20",
                        stroke: "#2895A4",
                        "stroke-linecap": "round",
                        "stroke-linejoin": "round"
                      }
                    })
                  ]
                )
              ]),
              _c("p", { staticClass: "text-dark" }, [
                _vm._v("Laura Norda is not part of any sales sequence.")
              ])
            ])
          ])
        ])
      ],
      1
    )
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "hedr_box1" }, [
      _c("div", { staticClass: "contct_num2" }, [_vm._v("2")]),
      _c("div", { staticClass: "box1_txt" }, [_vm._v("Add support channels")]),
      _c("div", { staticClass: "cnct_btn_div" }, [
        _c("button", { staticClass: "cnct_btn" }, [_vm._v("Connect")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "hedr_box1" }, [
      _c("div", { staticClass: "contct_num2" }, [_vm._v("3")]),
      _c("div", { staticClass: "box1_txt" }, [
        _vm._v("Provide intelligent self service")
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "sidebar_container" }, [
      _c("div", { staticClass: "chat_baloon" }, [
        _c("img", { attrs: { src: "/dashboard/chat-balloon.png", alt: "" } })
      ]),
      _c("div", { staticClass: "dashbrd" }, [
        _c("img", { attrs: { src: "/dashboard/dashboard.png", alt: "" } })
      ]),
      _c("div", { staticClass: "message" }, [
        _c("img", { attrs: { src: "/dashboard/message.png", alt: "" } })
      ]),
      _c("div", { staticClass: "user" }, [
        _c("img", { attrs: { src: "/dashboard/user.png", alt: "" } })
      ]),
      _c("div", { staticClass: "people" }, [
        _c("img", { attrs: { src: "/dashboard/people.png", alt: "" } })
      ]),
      _c("div", { staticClass: "open_book" }, [
        _c("img", { attrs: { src: "/dashboard/open-book.png", alt: "" } })
      ]),
      _c("div", { staticClass: "chat" }, [
        _c("img", { attrs: { src: "/dashboard/chat.png", alt: "" } })
      ]),
      _c("div", { staticClass: "mega_phone" }, [
        _c("img", { attrs: { src: "/dashboard/megaphone.png", alt: "" } })
      ]),
      _c("div", { staticClass: "stats" }, [
        _c("img", { attrs: { src: "/dashboard/stats.png", alt: "" } })
      ]),
      _c("div", { staticClass: "settings" }, [
        _c("img", { attrs: { src: "/dashboard/settings.png", alt: "" } })
      ]),
      _c("div", { staticClass: "colr_menu" }, [
        _c("img", {
          attrs: {
            src:
              "https://accounts.freshworks.com/omnibar/assets/stable/switcher.svg?v=v2.1.2-1695193281",
            alt: "",
            role: "presentation"
          }
        })
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "explre_btn_div" }, [
      _c("button", { staticClass: "explre_btn" }, [_vm._v("Explore plans")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "explre_btn_div" }, [
      _c("button", { staticClass: "explre_btn" }, [_vm._v("Request Demo")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "explre_btn_div" }, [
      _c("button", { staticClass: "explre_btn" }, [
        _vm._v("Recommended Features")
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "plus_btn" }, [
      _c("img", { attrs: { src: "/dashboard/plus.png", alt: "" } })
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "plus_btn" }, [
      _c("img", { attrs: { src: "/dashboard/bell.png", alt: "" } })
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "section_one" }, [
      _c("div", { staticClass: "cntact_sect" }, [
        _c("div", { staticClass: "txt_mycontct" }, [_vm._v("My Contacts")]),
        _c("div", { staticClass: "txt_four" }, [_vm._v("4")]),
        _c("div", { staticClass: "close_icon" }, [
          _c("img", { attrs: { src: "/dashboard/close.png", alt: "" } })
        ])
      ]),
      _c("div", { staticClass: "new_contct_sect" }, [
        _c("div", { staticClass: "txt_new_contct" }, [_vm._v("New Contact")])
      ]),
      _c("div", { staticClass: "new_contct_sect" }, [
        _c("div", { staticClass: "txt_new_contct" }, [_vm._v("All Contact")])
      ]),
      _c("div", { staticClass: "new_contct_sect" }, [
        _c("div", { staticClass: "txt_new_contct" }, [_vm._v("+9 More...")])
      ]),
      _c("div", { staticClass: "new_contct_sect" }, [
        _c("div", { staticClass: "txt_new_ctrl" }, [_vm._v("Ctrl O")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("select", { attrs: { name: "View Import History", id: "" } }, [
      _c("option", { attrs: { value: "" } })
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("tr", [
        _c("th", { staticClass: "tble_name_sect", attrs: { scope: "col" } }, [
          _c("input", { staticClass: "inptchck", attrs: { type: "checkbox" } }),
          _vm._v(" Name "),
          _c("select", { attrs: { name: "", id: "table_slct" } })
        ]),
        _c("th", { staticClass: "tble_txt", attrs: { scope: "col" } }, [
          _vm._v("Emails "),
          _c("select", { attrs: { name: "", id: "table_slct2" } })
        ]),
        _c("th", { staticClass: "tble_name_sect", attrs: { scope: "col" } }, [
          _vm._v("Work "),
          _c("select", { attrs: { name: "", id: "table_slct" } })
        ]),
        _c("th", { staticClass: "tble_txt2", attrs: { scope: "col" } }, [
          _vm._v("Next activity "),
          _c("select", { attrs: { name: "", id: "table_slct2" } })
        ]),
        _c("th", { staticClass: "tble_txt", attrs: { scope: "col" } }, [
          _vm._v("Tags "),
          _c("select", { attrs: { name: "", id: "table_slct2" } })
        ]),
        _c("th", { staticClass: "tble_txt", attrs: { scope: "col" } }, [
          _vm._v("Sales owner "),
          _c("select", { attrs: { name: "", id: "table_slct2" } })
        ]),
        _c("th", { staticClass: "tble_txt", attrs: { scope: "col" } }, [
          _vm._v("Status "),
          _c("select", { attrs: { name: "", id: "table_slct2" } })
        ]),
        _c("th", { staticClass: "tble_txt", attrs: { scope: "col" } }, [
          _vm._v("Accounts "),
          _c("select", { attrs: { name: "", id: "table_slct2" } })
        ]),
        _c("th", { staticClass: "tble_txt", attrs: { scope: "col" } }, [
          _vm._v("+")
        ])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("th", { staticClass: "name_sect ", attrs: { scope: "row" } }, [
      _c("input", { staticClass: "inptchck", attrs: { type: "checkbox" } }),
      _c("img", {
        staticClass: "tble_img v-b-modal.modal-scrollable",
        attrs: { src: "/dashboard/prof_pic_dashbrd.png", alt: "" }
      }),
      _c("p", { staticClass: "text-primary " }, [
        _vm._v("Laura Norda (sample)")
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("td", [
      _c("p", { staticClass: "text-primary" }, [_vm._v("Acme Inc (sample)")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("th", { staticClass: "name_sect", attrs: { scope: "row" } }, [
      _c("input", { staticClass: "inptchck", attrs: { type: "checkbox" } }),
      _c("img", {
        staticClass: "tble_img",
        attrs: { src: "/dashboard/prof_pic_dashbrd.png", alt: "" }
      }),
      _c("p", { staticClass: "text-primary" }, [_vm._v("Laura Norda (sample)")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("td", [
      _c("p", { staticClass: "text-primary" }, [_vm._v("Acme Inc (sample)")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("th", { staticClass: "name_sect", attrs: { scope: "row" } }, [
      _c("input", { staticClass: "inptchck", attrs: { type: "checkbox" } }),
      _c("img", {
        staticClass: "tble_img",
        attrs: { src: "/dashboard/prof_pic_dashbrd.png", alt: "" }
      }),
      _c("p", { staticClass: "text-primary" }, [_vm._v("Laura Norda (sample)")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("td", [
      _c("p", { staticClass: "text-primary" }, [_vm._v("Acme Inc (sample)")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("th", { staticClass: "name_sect", attrs: { scope: "row" } }, [
      _c("input", { staticClass: "inptchck", attrs: { type: "checkbox" } }),
      _c("img", {
        staticClass: "tble_img",
        attrs: { src: "/dashboard/prof_pic_dashbrd.png", alt: "" }
      }),
      _c("p", { staticClass: "text-primary" }, [_vm._v("Laura Norda (sample)")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("td", [
      _c("p", { staticClass: "text-primary" }, [_vm._v("Acme Inc (sample)")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("th", { staticClass: "name_sect", attrs: { scope: "row" } }, [
      _c("input", { staticClass: "inptchck", attrs: { type: "checkbox" } }),
      _c("img", {
        staticClass: "tble_img",
        attrs: { src: "/dashboard/prof_pic_dashbrd.png", alt: "" }
      }),
      _c("p", { staticClass: "text-primary" }, [_vm._v("Laura Norda (sample)")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("td", [
      _c("p", { staticClass: "text-primary" }, [_vm._v("Acme Inc (sample)")])
    ])
  }
]
render._withStripped = true

export { render, staticRenderFns }"}]}